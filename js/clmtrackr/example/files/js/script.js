// Generated by Haxe 3.4.7
(function () { "use strict";
var Main = function() { };
Main.main = function() {
	window.addEventListener("DOMContentLoaded",Main.init);
};
Main.init = function() {
	Main._log = window.document.getElementById("log");
	Main.setup();
	Main._ctrack = new clm.tracker();
	Main.loadImage("files/img/image.png");
	Main._input = window.document.querySelector("[data-js=\"inputimage\"]");
	Main._input.addEventListener("change",Main.onInputImage);
};
Main.onInputImage = function(event) {
	window.cancelAnimationFrame(Main._requestAnimation);
	window.document.removeEventListener("clmtrackrConverged",Main.onClmtrackrConverged);
	window.document.removeEventListener("clmtrackrLost",Main.onClmtrackrLost);
	Main._ctrack.stop();
	Main.clearCanvas(Main._image);
	Main.clearCanvas(Main._wireframe);
	var reader = new FileReader();
	reader.onload = function() {
		Main.loadImage(reader.result);
	};
	var tmp = Main._input.files.item(0);
	reader.readAsDataURL(tmp);
};
Main.setup = function() {
	Main._image = window.document.createElement("canvas");
	Main._wireframe = window.document.createElement("canvas");
	Main._board = window.document.getElementById("board");
	Main._board.appendChild(Main._image);
	Main._board.appendChild(Main._wireframe);
};
Main.loop = function(timeStamp) {
	Main._requestAnimation = window.requestAnimationFrame(Main.loop);
	Main.clearCanvas(Main._wireframe);
	if(Main._ctrack.getCurrentPosition()) {
		Main._ctrack.draw(Main._wireframe);
	}
};
Main.getMaxMin = function(array) {
	var min = array[0];
	var max = array[0];
	var _g = 0;
	while(_g < array.length) {
		var target = array[_g];
		++_g;
		min = Math.min(min,target);
		max = Math.max(max,target);
	}
	return { max : max, min : min};
};
Main.loadImage = function(src) {
	Main.log("Analyze...");
	var image = new Image();
	image.onload = function() {
		Main.draw(image);
	};
	image.src = src;
};
Main.draw = function(image) {
	var width = Main._image.width = Main._wireframe.width = image.width;
	var height = Main._image.height = Main._wireframe.height = image.height;
	Main._board.style.width = width + "px";
	Main._board.style.height = height + "px";
	Main._image.getContext("2d",null).drawImage(image,0,0,width,height);
	Main.loop();
	window.document.addEventListener("clmtrackrConverged",Main.onClmtrackrConverged);
	window.document.addEventListener("clmtrackrLost",Main.onClmtrackrLost);
	Main._ctrack.reset();
	Main._ctrack.init(pModel);
	Main._ctrack.start(Main._image);
};
Main.clearCanvas = function(canvas) {
	canvas.getContext("2d",null).clearRect(0,0,canvas.width,canvas.height);
};
Main.onClmtrackrConverged = function() {
	window.document.removeEventListener("clmtrackrConverged",Main.onClmtrackrConverged);
	window.document.removeEventListener("clmtrackrLost",Main.onClmtrackrLost);
	Main.log("Success");
	window.cancelAnimationFrame(Main._requestAnimation);
};
Main.onClmtrackrLost = function() {
	window.document.removeEventListener("clmtrackrConverged",Main.onClmtrackrConverged);
	window.document.removeEventListener("clmtrackrLost",Main.onClmtrackrLost);
	Main.log("Not found");
	window.cancelAnimationFrame(Main._requestAnimation);
	Main._ctrack.stop();
};
Main.log = function(message) {
	Main._log.textContent = message;
};
Main.main();
})();
